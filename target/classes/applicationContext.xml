<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
">
    <!--引入多个外部属性文件-->
    <context:property-placeholder order="1" location="classpath:jdbc.properties"></context:property-placeholder>
    <context:property-placeholder order="2" location="classpath:redis.properties"></context:property-placeholder>

    <!--配置自动注解-->
    <context:annotation-config></context:annotation-config>

    <!--配置包自动扫描-->
    <context:component-scan base-package="com.hern.mapper,com.hern.service.impl"></context:component-scan>

    <!--配置Druid数据库连接池，设置数据库的地址、驱动连接、用户名、密码、初始化大小（包含最大、最小）、获取连接等待超时的时间（毫秒）、监控统计拦截的filters和防sql注入-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="jdbc:mysql://localhost:3306/springboot_test?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;useSSL=false"></property>
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="username" value="root"></property>
        <property name="password" value="10043632"></property>
        <property name="initialSize" value="5"></property>
        <property name="maxActive" value="10"></property>
        <property name="minIdle" value="5"></property>
        <property name="maxWait" value="60000"></property>
        <property name="filters" value="stat,wall"></property>
    </bean>

    <!--MyBatis配置：引入数据源、开启驼峰命名、指定Mybatis配置文件路径、配置MyBatis分页插件-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:MyBatisConfigure.xml"></property>
        <property name="typeAliasesPackage" value="com.hern.entity"></property>

        <!--配置MyBatis分页插件-->
        <property name="plugins">
            <array>
                <!--配置数据库类型为MySQL，分页参数合理化-->
                <bean id="pageHelper" class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--指定MyBatis的Mapper文件位置-->
    <bean id="mapperConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hern.mapper"></property>
    </bean>

    <!--配置事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--JedisPool配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="30" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="10" />
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="1024" />
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="30000" />
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="1800000" />
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000" />
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="1500" />
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="true" />
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true" />
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false" />
    </bean>

    <!--配置JedisPool，引入JedisPool配置，指定host地址，开启6379端口的Jedis服务器-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="127.0.0.1" />
        <constructor-arg name="port" value="6379" />
    </bean>

</beans>